import type { NextPage } from 'next'
import Head from 'next/head'
import { useColorMode, Flex, Stack, Text, Box, useBreakpointValue } from '@chakra-ui/react'
import Header from './sections/Header'
import Intro from './sections/Intro'
import Experience from './sections/Experience'
import Projects from './sections/Projects'
import Designs from './sections/Designs'
import Features from './sections/Features'
import Contact from './sections/Contact'
import { useRef, useState, useEffect } from 'react'

const Home: NextPage = () => {
  const { colorMode, toggleColorMode } = useColorMode()
  const observerRef = useRef<IntersectionObserver | null>(null)
  const [activeSection, setActiveSection] = useState<number>(0)
  const [hovering, setHovering] = useState<boolean>(false)

  const SECTION_COMPONENTS = [
    <Intro />,
    <Experience />,
    <Projects />,
    <Designs />,
    <Features />,
    <Contact />
  ]

  useEffect(() => {
    observerRef.current = new IntersectionObserver(
      ([entry]) => {
        const entryId = Number(entry.target.id.slice(8));
        if (entry.isIntersecting && entry.intersectionRatio <= 0.45) {
          if (!hovering) {
            setActiveSection(entryId);
            console.log('active: ' + entryId + ', intersectionRatio: ' + entry.intersectionRatio)
          }
        }
      },
      {
        threshold: 0.25,
      }
    );


    const sections = document.querySelectorAll('section');
    sections.forEach((section) => {
      observerRef.current?.observe(section);
    })

    return () => {
      sections.forEach((section) => {
        observerRef.current?.unobserve(section);
      })
    }
  }, [activeSection, hovering])

  // useEffect(() => {
  //   const activeLink = document.getElementById(`header-link-${activeSection}`);
  //   activeLink?.classList.add('active');
  // }, [activeSection])

  // TODO: Add smooth scrolling animation

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Flex justifyContent='center' bg='brand.bg' flexDir="column">
          <Header
            colorMode={colorMode}
            toggleColorMode={toggleColorMode}
            activeSection={activeSection}
            setActiveSection={setActiveSection}
            hovering={hovering}
            setHovering={setHovering}
          />
          <Stack
            w='100%'
            display='flex'
            alignItems='center' justifyContent="center"
            padding={{ base: "1.5em 27.5px 5em", md: "7.5em 27.5px" }}
            spacing={{ base: 0, md: 125 }}
          >
            {SECTION_COMPONENTS.map(((sectionComponent, i) => {
              const elem =
                <section key={i} id={`section-${i}`} style={
                  {
                    width: '100%',
                    maxWidth: 'var(--chakra-sizes-contentW)',
                    minHeight: '65vh',
                    paddingTop: i !== 0 ? useBreakpointValue({base: "125px", md: "0px"}) : "0px",
                    display: 'flex',
                    // alignItems: 'center',
                    justifyContent: 'center'
                  }}>
                  {sectionComponent}
                </section>;
              return elem;
            }))}
          </Stack>
        </Flex>
      </main>

      <footer>
        <Text
          as="span"
          textAlign="center"
          display="flex"
          justifyContent="center"
          fontSize="xs"
          background="brand.bg"
          pb="2.5em"
        >
          Designed and built by Yau Yen Ching
        </Text>
      </footer>
    </>
  )
}

export default Home
